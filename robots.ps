program explorador;
uses
SysUtils;
CONST
MaxX = 20;
MaxY = 20;
var
instrucciones: array[1..4] of string;
mapa: array[1..MaxX, 1..MaxY] of char;
robotX, robotY: integer;
mapa2: array[1..MaxX, 1..MaxY] of char;
I: integer;
texto: string;
texto2: string;
recorrido: integer;

procedure CrearMapa;
var
x, y: integer;

begin
for x := 1 to MaxX do
	for y := 1 to MaxY do
		mapa[x, y] := 'C'; //lleno el mapa de calles (C)

//pongo las casas
for x := 2 to MaxX - 1 do
	for y := 2 to MaxY - 1 do
	begin
	if random(200) < 35 then //35% de probabilidad
	mapa[x, y] := 'H' // casas (H)
	end;
robotX := 1;
robotY := 5;
end;

procedure EstructuraMapa;
var
x, y: integer;
begin

for x := 1 to MaxX do
	for y := 1 to MaxY do
	begin
	mapa2[x,y] := mapa[x,y]; 
	end;
mapa2[robotX,robotY] := 'R';

end;




procedure MostrarMapa;
var
x, y: integer;
begin
for x := 1 to MaxX do
	for y := 1 to MaxY do
	begin
		write(mapa2[x,y],' ');
		if (y = MaxY) then
		writeln();
	end;
end;

begin


instrucciones[1] := 'Modelo 0021 en linea';
instrucciones[2] := 'Procediendo a analizar el terreno';
instrucciones[3] := 'Desplegando posibles acciones en el estado actual';
instrucciones[4] := '1: avanzar hacia adelante';
instrucciones[5] := '2: avanzar hacia la derecha';
instrucciones[6] := '3: avanzar hacia la izquierda';
instrucciones[7] := '4: avanzar hacia atras';
instrucciones[8] := '0: salir';

I:=1;
CrearMapa;
EstructuraMapa;
//iniciado sistema

texto:= instrucciones[1]+ sLineBreak +
	instrucciones[2];
	
texto2:=  instrucciones[3] + sLineBreak +
	  instrucciones[4] + sLineBreak +
	  instrucciones[5] + sLineBreak +
	  instrucciones[6] + sLineBreak +
	  instrucciones[7] + sLineBreak +
	  instrucciones[8] + sLineBreak;	
	

while I<> 0 do
begin	
	for recorrido := 1 to Length(texto) do
	begin
	write(texto[recorrido]);
	Sleep(50);
	end;
		
	writeln();
	
	MostrarMapa;
	
	for recorrido := 1 to Length(texto2) do
	begin
	write(texto2[recorrido]);
	Sleep(50);
	end;
	
	readln(I);
		
	case I of
	1: begin
		robotX := robotX + 1;
		EstructuraMapa;
		
	   end;
	2: begin 
		robotY := robotY + 1;
	   end;
	3: begin 
		robotY := robotY - 1;
	   end;
	4: begin
		robotX := robotX -1;
	   end;
	end;
end;
end.
